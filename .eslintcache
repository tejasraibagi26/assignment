[{"C:\\Users\\tejas\\Desktop\\Internship Assignment\\assignment\\src\\index.js":"1","C:\\Users\\tejas\\Desktop\\Internship Assignment\\assignment\\src\\App.js":"2","C:\\Users\\tejas\\Desktop\\Internship Assignment\\assignment\\src\\reportWebVitals.js":"3","C:\\Users\\tejas\\Desktop\\Internship Assignment\\assignment\\src\\Pages\\Register.js":"4"},{"size":547,"mtime":1606821244195,"results":"5","hashOfConfig":"6"},{"size":157,"mtime":1606821421893,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":7080,"mtime":1606824298656,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1uftsas",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\tejas\\Desktop\\Internship Assignment\\assignment\\src\\index.js",[],["20","21"],"C:\\Users\\tejas\\Desktop\\Internship Assignment\\assignment\\src\\App.js",[],"C:\\Users\\tejas\\Desktop\\Internship Assignment\\assignment\\src\\reportWebVitals.js",[],"C:\\Users\\tejas\\Desktop\\Internship Assignment\\assignment\\src\\Pages\\Register.js",["22"],"import React from 'react';\r\nimport {Row, Col, Form, Button} from 'react-bootstrap';\r\n\r\nclass Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            password: \"\",\r\n            repeat_password: \"\",\r\n            errorFName: \"\",\r\n            errorLName: \"\",\r\n            errorEmail: \"\",\r\n            errorPhone: \"\",\r\n            errorPassEmp: \"\",\r\n            errorPass: \"\"\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n            this.setState({\r\n                [e.target.name]: e.target.value,\r\n            });\r\n        }\r\n\r\n    submitHandler = () => {\r\n        var isValid = this.validate();\r\n        if(isValid) {\r\n            alert('Registration Complete');\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        this.setState({\r\n            errorFName: \"\",\r\n            errorLName: \"\",\r\n            errorEmail: \"\",\r\n            errorPhone: \"\",\r\n            errorPassEmp: \"\",\r\n            errorPass: \"\"})\r\n\r\n           if(!this.state.firstname) {\r\n            this.setState({errorFName: \"Required\"});\r\n\r\n           }\r\n           if(!this.state.lastname) {\r\n            this.setState({errorLName: \"Required\"});\r\n       \r\n           }\r\n           if(!this.state.email.includes('@')) {\r\n            this.setState({errorEmail: \"Invalid Email\"});\r\n           }\r\n           if(this.state.phone.length !== 10 ) {\r\n            this.setState({errorPhone: \"Incorrect Number\"});\r\n           }\r\n           if(!this.state.password) {\r\n               this.setState({errorPassEmp: \"Password cannot be empty\"});\r\n           }\r\n           if(this.state.password !== this.state.repeat_password || !this.state.repeat_password) {\r\n            this.setState({errorPass: \"Password does not match!\"});\r\n            return false;\r\n           }\r\n\r\n           return true;\r\n\r\n        }\r\n\r\n    render() {\r\n        return(\r\n            <section id=\"register\">\r\n                <Row xs={1} md={3} className=\"justify-content-center align-items-center\">\r\n                    <Col>\r\n                        <h2 align=\"center\" style={{marginTop: \"15%\"}}>\r\n                        Register\r\n                        </h2>\r\n                        <Form className=\"login-form\">\r\n                            <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridFname\">\r\n                            <Form.Label>\r\n                                First Name\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                className=\"swing-in-left-fwd\"\r\n                                placeholder=\"First Name\"\r\n                                name=\"firstname\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <p style={{color:\"red\"}}>{this.state.errorFName}</p>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formGridLname\">\r\n                            <Form.Label\r\n                                className=\"swing-in-left-fwd\"\r\n                                style={{ animationDelay: \"0.2s\" }}\r\n                            >\r\n                                Last Name\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Last Name\"\r\n                                name=\"lastname\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <p style={{color:\"red\"}}>{this.state.errorLName}</p>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label >\r\n                            Email address\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                            required\r\n                            type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            name=\"email\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                            <Form.Text>\r\n                            We'll never share your email with anyone else.\r\n                            </Form.Text>\r\n                            <p style={{color:\"red\"}}>{this.state.errorEmail}</p>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPhone\">\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control\r\n                            required\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            placeholder=\"+91...\"\r\n                            name=\"phone\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                            <p style={{color:\"red\"}}>{this.state.errorPhone}</p>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                            required\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            name=\"password\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                            <p style={{color:\"red\"}}>{this.state.errorPassEmp}</p>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Repeat Password</Form.Label>\r\n                            <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Repeat Password\"\r\n                            name=\"repeat_password\"\r\n                            onChange={this.handleChange}\r\n                            />\r\n                            <p style={{color:\"red\"}}>{this.state.errorPass}</p>\r\n                        </Form.Group>\r\n                        <a\r\n                            href=\"#\"\r\n                        >\r\n                            Already have an Account?Click here to Sign In!\r\n                        </a>\r\n                        <p align = \"center\" style={{color:\"red\"}}>{this.state.error}</p>\r\n                        <p align=\"center\">\r\n                            <Button className=\"form-button\" onClick={this.submitHandler}>\r\n                            Submit\r\n                            </Button>\r\n                        </p>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":165,"column":25,"nodeType":"29","endLine":167,"endColumn":26},"no-native-reassign",["30"],"no-negated-in-lhs",["31"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]